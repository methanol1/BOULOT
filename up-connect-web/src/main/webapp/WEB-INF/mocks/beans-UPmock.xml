<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<!-- This file can be an empty text file (0 bytes) -->
<!-- We're declaring the schema to save you time if you do have to configure 
	this in the future -->
<beans xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/beans_1_0.xsd">

	<alternatives>
		<class>com.natixis.financement.middlesav.commun.config.ConnectionFactoryProducerMock</class>
		<!-- CHOIX DU SERVICE CONTRAT UP1 -->
		<!-- Si on veut tester le fonctionnement sans aller jusqu'au DAO united 
			(mocké) -->
		<class>com.natixis.cco.upconnect.service.contrat.up1.ContratUP1ServiceImpl</class>
		<!-- FIN CHOIX DU SERVICE CONTRAT UP1 -->

		<!-- CHOIX DU SERVICE UP2 CONTRAT SANS INCIDENCE SUR LE TEST -->
		<!-- Si on veut tester le fonctionnement sans aller jusqu'au DAO united 
			(mocké) -->
		<class>com.natixis.cco.upconnect.service.contrat.up2.ContratUP2ServiceImpl</class>
		<!-- FIN CHOIX DU SERVICE CONTRAT UP2 -->


		<!-- CHOIX DU SERVICE RACHAT UP1 -->
		<!-- Si on veut tester le fonctionnement sans aller jusqu'au DAO united 
			(mocké) -->
		<class>com.natixis.cco.upconnect.service.rachat.up1.RachatUP1ServiceImpl</class>
		<!-- FIN CHOIX DU SERVICE RACHAT UP1 -->

		<!-- CHOIX DU SERVICE ASSURANCE UP1 -->
		<!-- Si on veut tester le fonctionnement sans aller jusqu'au DAO united 
			(mocké) -->
		<class>com.natixis.cco.upconnect.service.assurance.up1.AssuranceUP1ServiceImpl</class>
		<!-- FIN CHOIX DU SERVICE ASSURANCE UP1 -->
		<class>com.natixis.cco.upconnect.service.domban.up1.DomBanUP1ServiceImpl</class>
		<class>com.natixis.cco.upconnect.service.agence.up1.AgenceUP1ServiceImpl</class>
		<class>com.natixis.cco.upconnect.service.dmen.up1.DMenUP1ServiceImpl</class>
		<class>com.natixis.cco.upconnect.service.dcrl.up1.DCrlUP1ServiceMock</class>
		<class>com.natixis.cco.upconnect.service.historique.up1.HistoUP1ServiceMock</class>
		
		<!-- Le test associé vérifie la bonne interprétation de la commarea mockée 
			: -->
		<class>com.natixis.financement.middlesav.united.dao.UnitedDaoMock</class>
	</alternatives>

	<interceptors>
		<class>com.natixis.cco.upconnect.interceptors.LogCommareaInterceptor</class>
		<!-- Les interceptors pour les stats des services -->
		<class>com.natixis.cco.upconnect.interceptors.contrat.ContratStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.contrat.AgenceStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.contrat.AssuranceStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.contrat.DomBanStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.contrat.RachatStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.m2cr.DMenStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.m2cr.DCrlStatInterceptor</class>
		<class>com.natixis.cco.upconnect.interceptors.historique.HistoStatInterceptor</class>
	</interceptors>
</beans>